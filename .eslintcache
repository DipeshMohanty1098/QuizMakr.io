[{"D:\\React\\quiz-app\\src\\index.js":"1","D:\\React\\quiz-app\\src\\App.js":"2","D:\\React\\quiz-app\\src\\reducers\\rootReducers.js":"3","D:\\React\\quiz-app\\src\\routes.js":"4","D:\\React\\quiz-app\\src\\components\\questionNumbers.js":"5","D:\\React\\quiz-app\\src\\components\\question.js":"6","D:\\React\\quiz-app\\src\\actions\\setAnswers.js":"7","D:\\React\\quiz-app\\src\\components\\result.js":"8","D:\\React\\quiz-app\\src\\components\\startQuiz.js":"9","D:\\React\\quiz-app\\src\\components\\timerStart.js":"10","D:\\React\\quiz-app\\src\\components\\navBar.js":"11","D:\\React\\quiz-app\\src\\components\\browseQuizzes.js":"12","D:\\React\\quiz-app\\src\\reducers\\rootReducers1.js":"13","D:\\React\\quiz-app\\src\\components\\createQuizForm.js":"14","D:\\React\\quiz-app\\src\\components\\test.js":"15","D:\\React\\quiz-app\\src\\actions\\createQuizSet.js":"16"},{"size":541,"mtime":1610805919205,"results":"17","hashOfConfig":"18"},{"size":336,"mtime":1610806784660,"results":"19","hashOfConfig":"18"},{"size":2087,"mtime":1610894427241,"results":"20","hashOfConfig":"18"},{"size":1155,"mtime":1610889944097,"results":"21","hashOfConfig":"18"},{"size":1745,"mtime":1610815434017,"results":"22","hashOfConfig":"18"},{"size":3099,"mtime":1610897403321,"results":"23","hashOfConfig":"18"},{"size":239,"mtime":1610813162615,"results":"24","hashOfConfig":"18"},{"size":1345,"mtime":1610897294176,"results":"25","hashOfConfig":"18"},{"size":690,"mtime":1610896479108,"results":"26","hashOfConfig":"18"},{"size":819,"mtime":1610810398935,"results":"27","hashOfConfig":"18"},{"size":471,"mtime":1610895445836,"results":"28","hashOfConfig":"18"},{"size":1113,"mtime":1610870081859,"results":"29","hashOfConfig":"18"},{"size":1053,"mtime":1610805787933,"results":"30","hashOfConfig":"18"},{"size":6747,"mtime":1610895913663,"results":"31","hashOfConfig":"18"},{"size":343,"mtime":1610892667897,"results":"32","hashOfConfig":"18"},{"size":323,"mtime":1610892667887,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"180fqtt",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"D:\\React\\quiz-app\\src\\index.js",[],["72","73"],"D:\\React\\quiz-app\\src\\App.js",[],"D:\\React\\quiz-app\\src\\reducers\\rootReducers.js",["74"],"const initState ={\r\n    quizSets:[\r\n        {\r\n        id: '1',\r\n        title: 'About me Quiz',\r\n        questions:[\r\n            {id: '1', question: 'What is my name?', options: ['India', 'Dog', 'Lame', 'Bleh'], answer:'India', userAnswer: '', isAnswered : false},\r\n            {id: '2', question: 'Which country am I from?', options: ['India', 'Nigeria', 'England', 'Siberia'], answer:'Nigeria', userAnswer: '', isAnswered : false},\r\n            {id: '3', question: 'What is my dogs name?', options: ['Something', 'Gandu', 'Rocky', 'Rat'], answer:'Rocky', userAnswer: '', isAnswered : false},\r\n        ]\r\n    },\r\n    {\r\n        id: '2',\r\n        title: 'About me Quiz2',\r\n        questions:[\r\n            {id: '1', question: 'What is my name123?', options: ['India', 'Dog', 'Lame', 'Bleh'], answer:'India', userAnswer: '', isAnswered : false},\r\n            {id: '2', question: 'Which country am I from123?', options: ['India', 'Nigeria', 'England', 'Siberia'], answer:'Nigeria', userAnswer: '', isAnswered : false},\r\n            {id: '3', question: 'What is my dogs name123?', options: ['Something', 'Gandu', 'Rocky', 'Rat'], answer:'Rocky', userAnswer: '', isAnswered : false},\r\n        ]\r\n    }\r\n]\r\n}\r\n\r\nconst rootReducer = (state = initState, action) =>{\r\n    if (action.type === 'SET_ANSWER'){\r\n        let question = state.quizSets.find(quizSet => \r\n            action.qid === quizSet.id).questions.find(q => q.id === action.id)\r\n        question.userAnswer = action.selectedAnswer;\r\n        question.isAnswered = true\r\n        console.log(\"rootReducer Question: \" + question.id);\r\n        return {\r\n            ...state,\r\n        }\r\n    }\r\n    if (action.type == 'CREATE_QUIZ'){\r\n        let quizSet = {\r\n            id: String(action.id),\r\n            title: action.title,\r\n            questions: action.questions,\r\n        }\r\n        let quizSetList = [...state.quizSets, quizSet];\r\n        console.log(state.quizSets);\r\n        return {\r\n            ...state,\r\n            quizSets: quizSetList\r\n        }\r\n        \r\n    }\r\n    return state;\r\n}\r\n\r\nexport default rootReducer;","D:\\React\\quiz-app\\src\\routes.js",["75","76"],"import React from 'react';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport QuestionNav from './components/questionNumbers'\r\nimport Question from './components/question'\r\nimport Result from './components/result'\r\nimport StartQuiz from './components/startQuiz';\r\nimport TimerStart from './components/timerStart';\r\nimport BrowseQuiz from './components/browseQuizzes';\r\nimport Form from './components/createQuizForm'\r\nimport Test from './components/test'\r\n\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <div>\r\n            <Route exact path=\"/\" component={BrowseQuiz}/>\r\n            <Switch>\r\n            <Route exact path=\"/createQuiz\" component={Form}/>\r\n            <Route path=\"/timerStart/:quizSet_id\" component={TimerStart}/>\r\n            <Route path=\"/startQuizSet=:quizSet_id\" component={StartQuiz}/>\r\n            <Route path=\"/test\" component={Test}/>\r\n            </Switch>\r\n            <Switch>\r\n            <Route path=\"/question/:quizSet_id/:question_id\" component={Question}/>\r\n            <Route path=\"/result/:quizSet_id\" component={Result}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes;","D:\\React\\quiz-app\\src\\components\\questionNumbers.js",["77","78"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport Question from './question'\r\n\r\n\r\nclass QuestionNav extends React.Component{\r\n    state = {\r\n        color: \"green\",\r\n        status: ''\r\n    }\r\n\r\n    changeColor = () => {\r\n        this.setState({\r\n            color: \"red\"\r\n        })\r\n    }\r\n\r\n    check = (question) => {\r\n        if (question.isAnswered == true){\r\n            return true\r\n        }\r\n        else{\r\n            return false\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        const {questions,pid} = this.props\r\n        \r\n        console.log(\"array: \"+questions)\r\n        console.log(\"id: \"+ pid)\r\n        const questionLinks = questions.length ? questions.map(question => {\r\n            return (\r\n                <div key={question.id + question.question} className=\"questionNumber\">\r\n                <div className=\"rand\">\r\n                <nobr>\r\n                <Link to={\"/question/\"+ pid + '/' + question.id}><h5 style={{color: question.isAnswered ? \"green\" : \"red\"}}>{question.id}{question.isAnswered ? <i className=\"material-icons\" id=\"tick\" style= {{color: \"black\"}}>check</i>: <p></p>}</h5></Link>\r\n                </nobr>\r\n                </div>\r\n                </div>\r\n            )\r\n        }) : (\r\n                <div>\r\n                Nothing here\r\n                </div>\r\n        )\r\n        return(\r\n            <div className=\"questions\">\r\n                {questionLinks}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    let id = ownProps.pid\r\n    return {\r\n        questions: state.quizSets.find(quizSet => quizSet.id === id).questions\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(QuestionNav);","D:\\React\\quiz-app\\src\\components\\question.js",["79","80"],"D:\\React\\quiz-app\\src\\actions\\setAnswers.js",[],"D:\\React\\quiz-app\\src\\components\\result.js",["81","82"],"D:\\React\\quiz-app\\src\\components\\startQuiz.js",[],"D:\\React\\quiz-app\\src\\components\\timerStart.js",["83","84"],"import { render } from '@testing-library/react';\r\nimport React from 'react';\r\n\r\nclass TimerStart extends React.Component {\r\n    state = {\r\n        counter: 5\r\n    }\r\n\r\n    componentDidMount(){\r\n       let timer = setInterval(()=>{\r\n            this.setState({\r\n                counter: Number(this.state.counter) - 1\r\n            })\r\n            if (this.state.counter == 0){\r\n                this.props.history.push('/question/' + this.props.match.params.quizSet_id + '/' +1)\r\n                clearInterval(timer);\r\n            }\r\n        },1000)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n    }\r\n\r\n\r\n    \r\n    render(){\r\n        return(\r\n        <div className=\"center\">\r\n        <h1>Quiz Starts in 5 seconds!</h1>\r\n        <h2>{this.state.counter}</h2> \r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TimerStart;","D:\\React\\quiz-app\\src\\components\\navBar.js",["85"],"D:\\React\\quiz-app\\src\\components\\browseQuizzes.js",[],"D:\\React\\quiz-app\\src\\reducers\\rootReducers1.js",[],"D:\\React\\quiz-app\\src\\components\\createQuizForm.js",["86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103"],"import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom'\r\nimport createQuiz from '../actions/createQuizSet'\r\n\r\nclass Form extends React.Component{\r\n    state = {\r\n        id: 0,\r\n        title: '',\r\n        questions: [],\r\n        question: '',\r\n        questionID: 1,\r\n        option1: '',\r\n        option2: '',\r\n        option3: '',\r\n        option4: '',\r\n        answer: '',\r\n        userAnswer: '',\r\n        isAnswered: false,\r\n        error: ''\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            id: Number(this.props.quizSets.length) + 1\r\n        })\r\n    }\r\n\r\n\r\n    onChangeHandler = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })  \r\n    }\r\n\r\n    addQuestion = (e) => {\r\n        let answer = this.state.answer;\r\n        e.preventDefault();\r\n        if (answer != this.state.option1 &&\r\n            answer != this.state.option2 &&\r\n            answer != this.state.option3 &&\r\n            answer != this.state.option4 ){\r\n                this.setState({\r\n                    error: \"Answer matches none of the options!\"\r\n                })\r\n        }else{\r\n        let question = {\r\n            id: String(this.state.questionID),\r\n            question: this.state.question,\r\n            options: [this.state.option1,this.state.option2,this.state.option3,this.state.option4],\r\n            answer: this.state.answer,\r\n            userAnswer: \"\",\r\n            isAnswered: false,   \r\n        }\r\n        let questionList = this.state.questions\r\n        questionList.push(question);\r\n        this.setState({\r\n            questions: questionList\r\n        })\r\n        this.setState({\r\n            question: '',\r\n            questionID: Number(this.state.questionID) + 1,\r\n            option1: '',\r\n            option2: '',\r\n            option3: '',\r\n           option4: '',\r\n            answer: '',\r\n           userAnswer: '',\r\n           error: ''\r\n        })\r\n        console.log(this.state.questions);\r\n    }\r\n    }\r\n\r\n    submitQuiz = (e) => {\r\n        if (this.state.answer == '' ||\r\n        this.state.question == '' ||\r\n        this.state.option1 == ''||\r\n        this.state.option2 == ''||\r\n        this.state.option3== '' ||\r\n        this.state.option4 == '' ||\r\n        this.state.title == '' ||\r\n        this.state.answer == '' ){\r\n            this.setState({\r\n                error: \"Enter all fields to submit!\"\r\n            })\r\n        }\r\n        else{\r\n            let answer = this.state.answer;\r\n            e.preventDefault();\r\n            if (answer != this.state.option1 &&\r\n                answer != this.state.option2 &&\r\n                answer != this.state.option3 &&\r\n                answer != this.state.option4 ){\r\n                    this.setState({\r\n                        error: \"Answer matches none of the options!\"\r\n                    })\r\n            }else{\r\n            let question = {\r\n                id: String(this.state.questionID),\r\n                question: this.state.question,\r\n                options: [this.state.option1,this.state.option2,this.state.option3,this.state.option4],\r\n                answer: this.state.answer,\r\n                userAnswer: \"\",\r\n                isAnswered: false,   \r\n            }\r\n            let questionList = this.state.questions\r\n            questionList.push(question);\r\n            this.setState({\r\n                questions: questionList\r\n            })\r\n            this.setState({\r\n                question: '',\r\n                questionID: Number(this.state.questionID) + 1,\r\n                option1: '',\r\n                option2: '',\r\n                option3: '',\r\n               option4: '',\r\n                answer: '',\r\n               userAnswer: '',\r\n               error: ''\r\n            })\r\n            console.log(this.state.questions);\r\n        }\r\n        this.props.createQuiz(\r\n            this.state.id,\r\n            this.state.title,\r\n            this.state.questions,\r\n            this.state.answer,\r\n            this.state.userAnswer,\r\n            this.state.isAnswered\r\n        )\r\n        this.props.history.push(\"/\")\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"center\">\r\n            <form>\r\n                <label htmlFor=\"title\">Quiz Title:</label>\r\n                <input type=\"text\" id=\"title\" onChange = {this.onChangeHandler} placeholder=\"Enter title\" value={this.state.title} required/>\r\n                <label htmlFor=\"question\">Question:</label>\r\n                <input type=\"text\" onChange = {this.onChangeHandler} id = \"question\" placeholder={\"Enter Question \" + this.state.questionID} value={this.state.question} required/>\r\n                <label htmlFor=\"option1\">Option 1:</label>\r\n                <input type=\"text\" onChange = {this.onChangeHandler} id = \"option1\" placeholder=\"Enter option 1\" value={this.state.option1} required/>\r\n                <label htmlFor=\"option2\">Option 2:</label>\r\n                <input type=\"text\" onChange = {this.onChangeHandler} id = \"option2\" placeholder=\"Enter option 2\" value={this.state.option2} required/>\r\n                <label htmlFor=\"option3\">Option 3:</label>\r\n                <input type=\"text\" onChange = {this.onChangeHandler} id = \"option3\" placeholder=\"Enter option 3\" value={this.state.option3} required/>\r\n                <label htmlFor=\"option4\">Option 4:</label>\r\n                <input type=\"text\" onChange = {this.onChangeHandler} id = \"option4\" placeholder=\"Enter option 4\" value={this.state.option4} required/>\r\n                <label htmlFor=\"option4\">Answer:</label>\r\n                <input type=\"text\" onChange = {this.onChangeHandler} id = \"answer\" placeholder=\"Enter answer (case senstitive)\" value={this.state.answer} required/>\r\n                <p style={{color: \"red\"}}>{this.state.error}</p>\r\n                <button className=\"waves-effect waves-light btn grey darken-2\" onClick={this.addQuestion} disabled={this.state.questions.length == 10 ? true : false}>Add Question</button> \r\n                <br/>\r\n                <br/>\r\n                <button onClick = {this.submitQuiz} className=\"waves-effect waves-light btn grey darken-2\">Submit Quiz</button>\r\n                </form>\r\n            </div>\r\n            \r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        quizSets: state.quizSets\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createQuiz: (id, title, questions, answer, userAnswer, isAnswered) => {\r\n            dispatch(\r\n                createQuiz(id, title, questions, answer, userAnswer, isAnswered)\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Form);","D:\\React\\quiz-app\\src\\components\\test.js",[],"D:\\React\\quiz-app\\src\\actions\\createQuizSet.js",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":35,"column":21,"nodeType":"110","messageId":"111","endLine":35,"endColumn":23},{"ruleId":"112","severity":1,"message":"113","line":2,"column":9,"nodeType":"114","messageId":"115","endLine":2,"endColumn":22},{"ruleId":"112","severity":1,"message":"116","line":3,"column":8,"nodeType":"114","messageId":"115","endLine":3,"endColumn":19},{"ruleId":"112","severity":1,"message":"117","line":4,"column":8,"nodeType":"114","messageId":"115","endLine":4,"endColumn":16},{"ruleId":"108","severity":1,"message":"109","line":20,"column":33,"nodeType":"110","messageId":"111","endLine":20,"endColumn":35},{"ruleId":"108","severity":1,"message":"109","line":21,"column":34,"nodeType":"110","messageId":"111","endLine":21,"endColumn":36},{"ruleId":"108","severity":1,"message":"109","line":63,"column":33,"nodeType":"110","messageId":"111","endLine":63,"endColumn":35},{"ruleId":"108","severity":1,"message":"109","line":15,"column":37,"nodeType":"110","messageId":"111","endLine":15,"endColumn":39},{"ruleId":"112","severity":1,"message":"118","line":21,"column":9,"nodeType":"114","messageId":"115","endLine":21,"endColumn":15},{"ruleId":"112","severity":1,"message":"119","line":1,"column":10,"nodeType":"114","messageId":"115","endLine":1,"endColumn":16},{"ruleId":"108","severity":1,"message":"109","line":14,"column":36,"nodeType":"110","messageId":"111","endLine":14,"endColumn":38},{"ruleId":"120","severity":1,"message":"121","line":8,"column":9,"nodeType":"122","endLine":8,"endColumn":30},{"ruleId":"112","severity":1,"message":"123","line":3,"column":9,"nodeType":"114","messageId":"115","endLine":3,"endColumn":13},{"ruleId":"108","severity":1,"message":"124","line":39,"column":20,"nodeType":"110","messageId":"111","endLine":39,"endColumn":22},{"ruleId":"108","severity":1,"message":"124","line":40,"column":20,"nodeType":"110","messageId":"111","endLine":40,"endColumn":22},{"ruleId":"108","severity":1,"message":"124","line":41,"column":20,"nodeType":"110","messageId":"111","endLine":41,"endColumn":22},{"ruleId":"108","severity":1,"message":"124","line":42,"column":20,"nodeType":"110","messageId":"111","endLine":42,"endColumn":22},{"ruleId":"108","severity":1,"message":"109","line":76,"column":31,"nodeType":"110","messageId":"111","endLine":76,"endColumn":33},{"ruleId":"108","severity":1,"message":"109","line":77,"column":29,"nodeType":"110","messageId":"111","endLine":77,"endColumn":31},{"ruleId":"108","severity":1,"message":"109","line":78,"column":28,"nodeType":"110","messageId":"111","endLine":78,"endColumn":30},{"ruleId":"108","severity":1,"message":"109","line":79,"column":28,"nodeType":"110","messageId":"111","endLine":79,"endColumn":30},{"ruleId":"108","severity":1,"message":"109","line":80,"column":27,"nodeType":"110","messageId":"111","endLine":80,"endColumn":29},{"ruleId":"108","severity":1,"message":"109","line":81,"column":28,"nodeType":"110","messageId":"111","endLine":81,"endColumn":30},{"ruleId":"108","severity":1,"message":"109","line":82,"column":26,"nodeType":"110","messageId":"111","endLine":82,"endColumn":28},{"ruleId":"108","severity":1,"message":"109","line":83,"column":27,"nodeType":"110","messageId":"111","endLine":83,"endColumn":29},{"ruleId":"108","severity":1,"message":"124","line":91,"column":24,"nodeType":"110","messageId":"111","endLine":91,"endColumn":26},{"ruleId":"108","severity":1,"message":"124","line":92,"column":24,"nodeType":"110","messageId":"111","endLine":92,"endColumn":26},{"ruleId":"108","severity":1,"message":"124","line":93,"column":24,"nodeType":"110","messageId":"111","endLine":93,"endColumn":26},{"ruleId":"108","severity":1,"message":"124","line":94,"column":24,"nodeType":"110","messageId":"111","endLine":94,"endColumn":26},{"ruleId":"108","severity":1,"message":"109","line":157,"column":145,"nodeType":"110","messageId":"111","endLine":157,"endColumn":147},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'QuestionNav' is defined but never used.","'Question' is defined but never used.","'string' is assigned a value but never used.","'render' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Link' is defined but never used.","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]